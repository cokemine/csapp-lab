                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f48805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f60803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f70001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | # https://111qqz.com/2020/02/csapp-archlab/
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x03e: 71ca00000000000000   | 	jle Single		# if so, goto Single:
                            | 
0x047:                      | Loop:	
0x047: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x051: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11 # read val2 from src++
0x05b: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x065: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi) # .. store val2 to dst++
0x06f: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x071: 718400000000000000   | 	jle Npos		# if so, goto Npos:
0x07a: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x084:                      | Npos:
0x084: 62bb                 | 	andq %r11, %r11	# val2 <= 0?
0x086: 719900000000000000   | 	jle	Npos2		# if so, goto Npos2:
0x08f: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x099:                      | Npos2:	
0x099: c0f2ffffffffffffffff | 	iaddq $-1, %rdx		# len-=2
0x0a3: c0f71000000000000000 | 	iaddq $16, %rdi		# src++
0x0ad: c0f61000000000000000 | 	iaddq $16, %rsi		# dst++
0x0b7: c0f2ffffffffffffffff | 	iaddq  $-1, %rdx
0x0c1: 764700000000000000   | 	jg Loop			# if so, goto Loop:
                            | 
0x0ca:                      | Single:
0x0ca: 6222                 | 	andq %rdx, %rdx
0x0cc: 72fe00000000000000   | 	jl Done
0x0d5: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x0df: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x0e9: 62aa                 | 	andq %r10, %r10
0x0eb: 71fe00000000000000   | 	jle Done 
0x0f4: c0f00100000000000000 | 	iaddq $1, %rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0fe:                      | Done:
0x0fe: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0ff:                      | End:
                            | #/* $end ncopy-ys */
0x0ff:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x100:                      | 	.align 8
0x100:                      | src:
0x100: ffffffffffffffff     | 	.quad -1
0x108: feffffffffffffff     | 	.quad -2
0x110: 0300000000000000     | 	.quad 3
0x118: 0400000000000000     | 	.quad 4
0x120: fbffffffffffffff     | 	.quad -5
0x128: 0600000000000000     | 	.quad 6
0x130: f9ffffffffffffff     | 	.quad -7
0x138: f8ffffffffffffff     | 	.quad -8
0x140: f7ffffffffffffff     | 	.quad -9
0x148: 0a00000000000000     | 	.quad 10
0x150: f5ffffffffffffff     | 	.quad -11
0x158: 0c00000000000000     | 	.quad 12
0x160: 0d00000000000000     | 	.quad 13
0x168: 0e00000000000000     | 	.quad 14
0x170: 0f00000000000000     | 	.quad 15
0x178: f0ffffffffffffff     | 	.quad -16
0x180: efffffffffffffff     | 	.quad -17
0x188: eeffffffffffffff     | 	.quad -18
0x190: edffffffffffffff     | 	.quad -19
0x198: ecffffffffffffff     | 	.quad -20
0x1a0: 1500000000000000     | 	.quad 21
0x1a8: eaffffffffffffff     | 	.quad -22
0x1b0: 1700000000000000     | 	.quad 23
0x1b8: e8ffffffffffffff     | 	.quad -24
0x1c0: e7ffffffffffffff     | 	.quad -25
0x1c8: e6ffffffffffffff     | 	.quad -26
0x1d0: e5ffffffffffffff     | 	.quad -27
0x1d8: 1c00000000000000     | 	.quad 28
0x1e0: e3ffffffffffffff     | 	.quad -29
0x1e8: e2ffffffffffffff     | 	.quad -30
0x1f0: 1f00000000000000     | 	.quad 31
0x1f8: e0ffffffffffffff     | 	.quad -32
0x200: 2100000000000000     | 	.quad 33
0x208: 2200000000000000     | 	.quad 34
0x210: 2300000000000000     | 	.quad 35
0x218: 2400000000000000     | 	.quad 36
0x220: 2500000000000000     | 	.quad 37
0x228: daffffffffffffff     | 	.quad -38
0x230: d9ffffffffffffff     | 	.quad -39
0x238: d8ffffffffffffff     | 	.quad -40
0x240: 2900000000000000     | 	.quad 41
0x248: 2a00000000000000     | 	.quad 42
0x250: 2b00000000000000     | 	.quad 43
0x258: d4ffffffffffffff     | 	.quad -44
0x260: d3ffffffffffffff     | 	.quad -45
0x268: 2e00000000000000     | 	.quad 46
0x270: d1ffffffffffffff     | 	.quad -47
0x278: 3000000000000000     | 	.quad 48
0x280: cfffffffffffffff     | 	.quad -49
0x288: ceffffffffffffff     | 	.quad -50
0x290: cdffffffffffffff     | 	.quad -51
0x298: ccffffffffffffff     | 	.quad -52
0x2a0: cbffffffffffffff     | 	.quad -53
0x2a8: caffffffffffffff     | 	.quad -54
0x2b0: 3700000000000000     | 	.quad 55
0x2b8: 3800000000000000     | 	.quad 56
0x2c0: 3900000000000000     | 	.quad 57
0x2c8: 3a00000000000000     | 	.quad 58
0x2d0: 3b00000000000000     | 	.quad 59
0x2d8: 3c00000000000000     | 	.quad 60
0x2e0: 3d00000000000000     | 	.quad 61
0x2e8: 3e00000000000000     | 	.quad 62
0x2f0: 3f00000000000000     | 	.quad 63
0x2f8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x300:                      | 	.align 16
0x300:                      | Predest:
0x300: fadebc0000000000     | 	.quad 0xbcdefa
0x308:                      | dest:
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500:                      | Postdest:
0x500: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x508:                      | .align 8
                            | # Run time stack
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
                            | 
0x588:                      | Stack:
